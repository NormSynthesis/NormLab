<?xml version="1.0" encoding="UTF-8" standalone="no"?><parameters>

	<!-- SIMULATOR SETTINGS -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$StringStringConverter" defaultValue="MyPopulation2" displayName="Population to use" isReadOnly="false" name="population" type="string"/>
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="0" displayName="Default Random Seed" isReadOnly="false" name="randomSeed" type="int"/>

	<parameter converter="repast.simphony.parameter.StringConverterFactory$LongConverter" defaultValue="5000" displayName="Sim: Max ticks" isReadOnly="false" name="maxTicks" type="long"/>
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$BooleanConverter" defaultValue="true" displayName="Sim: Use GUI" isReadOnly="false" name="useGui" type="boolean"/>
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$DoubleConverter" defaultValue="0.3" displayName="Sim: Norm violation rate" isReadOnly="false" name="normInfringementRate" type="double"/>
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$StringStringConverter" defaultValue="output/onlinecomm" displayName="Output data path" isReadOnly="false" name="outputDataPath" type="string"/>
				
	<parameter converter="repast.simphony.parameter.StringConverterFactory$StringStringConverter" defaultValue="TrafficNormsTotal.dat" displayName="Total norms file name" isReadOnly="false" name="totalNormsFilename" type="string"/>
				
	<parameter converter="repast.simphony.parameter.StringConverterFactory$StringStringConverter" defaultValue="TrafficNormsFinal.dat" displayName="Final norms file name" isReadOnly="false" name="finalNormsFilename" type="string"/>
				
	<parameter converter="repast.simphony.parameter.StringConverterFactory$StringStringConverter" defaultValue="TrafficNormSetsFinal.dat" displayName="Final norm sets file name" isReadOnly="false" name="finalNormSetsFilename" type="string"/>
				
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="2" displayName="Traffic: num. execution" isReadOnly="false" name="numExec" type="int"/>
				
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="5000" displayName="Total Comments" isReadOnly="false" name="Total Comments" type="int"/>
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$LongConverter" defaultValue="3000" displayName="Contents queue size" isReadOnly="false" name="contentQueueSize" type="long"/>

	<parameter converter="repast.simphony.parameter.StringConverterFactory$BooleanConverter" defaultValue="true" displayName="Norms have user id?" isReadOnly="false" name="normsHaveUserId" type="boolean"/>
					
	<!-- NORM SYNTHESIS SETTINGS -->
	
	<!-- ======================= -->			
	<!-- NORM SYNTHESIS SETTINGS -->
	<!-- ======================= -->
	
	
										<!-- GENERAL SETTINGS -->
										
										
	<!-- Strategy employed by the NSM to perform norm synthesis 
		-1 = Example
		 0 = Custom
		 1 = Generic
		 2 = BASE
		 3 = IRON
		 4 = SIMON
		 5 = LION
		 6 = DESMON) -->
		 
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="3" displayName="NSM: Norm synthesis strategy" isReadOnly="false" name="normSynthesisStrategy" type="int"/>
	
	<!-- Norm synthesis example 
		1 = No norms rule the MAS. No norm synthesis. 
		2 = A predefined normative system rules the MAS.
		3 = A predefined normative system rules the MAS.
		4 = Generation of norms at runtime. No norm evaluation. No norm refinement.
		5 = Generation and evaluation of norms at runtime. No norm refinement. -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="2" displayName="NSM: Norm synthesis example" isReadOnly="false" name="normSynthesisExample" type="int"/>
	
	<!-- Should the NSM perform norm generalisations to pursue normative systems' compactness? -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$BooleanConverter" defaultValue="true" displayName="Perform norm generalisations to pursue compactness?" isReadOnly="false" name="pursueCompactness" type="boolean"/>
	
	<!-- Should the NSM exploit norm synergies to pursue normative systems' liberality? -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$BooleanConverter" defaultValue="false" displayName="Exploit norm synergies to pursue liberality?" isReadOnly="false" name="pursueLiberality" type="boolean"/>
	
	<!-- Num ticks of stability required to converge -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$LongConverter" defaultValue="1000" displayName="NSM: Num. ticks to converge" isReadOnly="false" name="numTicksToConverge" type="long"/>
	
									<!-- NORM EVALUATION SETTINGS -->
									
		
	<!-- Norm evaluation mechanism. 
		 0 = use reinforcement learning and Bollinger Bands
		 1 = with cumulative moving average -->
		 
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="1" displayName="Norm evaluation mechanism" isReadOnly="false" name="normEvaluationMechanism" type="int"/>
	
	<!-- Norm evaluation learning rate -->
					
	<parameter converter="repast.simphony.parameter.StringConverterFactory$DoubleConverter" defaultValue="0.0" displayName="NSM: Norm evaluation learning rate" isReadOnly="false" name="normEvaluationLearningRate" type="double"/>
							
	<!-- Default norms' utilities -->
					
	<parameter converter="repast.simphony.parameter.StringConverterFactory$DoubleConverter" defaultValue="0.0" displayName="NSM: Norms default utility" isReadOnly="false" name="normsDefaultUtility" type="double"/>
				
	<!-- Size of the moving average to compute norms' cumulative performances -->
					
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="50" displayName="NSM: Norms performance range size" isReadOnly="false" name="normsPerfRangeSize" type="int"/>
	
	
									<!-- NORM GENERALISATION SETTINGS -->
									
	
	<!-- Norm generalisation approach. 
		 0 = conservative norm generalisation (IRON)
		 1 = optimistic norm generalisation (SIMON) -->
		 
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="1" displayName="Norm generalisation approach" isReadOnly="false" name="normGeneralisationApproach" type="int"/>
	
	<!-- Optimistic norm generalisation mode. 
		 0 = shallow norm generalisation
		 1 = deep norm generalisation -->
		 
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="1" displayName="Optimistic norm generalisation mode" isReadOnly="false" name="optimisticNormGeneralisationMode" type="int"/>

	<!-- Optimistic norm generalisation step --> 
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="1" displayName="Optimistic norm generalisation step" isReadOnly="false" name="optimisticNormGeneralisationStep" type="int"/>

	<!-- Threshold above which norms are considered to be effective enough to be generalised -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$DoubleConverter" defaultValue="0.0" displayName="NSM: Norm gen. eff. threshold" isReadOnly="false" name="normEffGenThreshold" type="double"/>
	
	<!-- Threshold above which norms are considered to be necessary enough to be generalised -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$DoubleConverter" defaultValue="0.0" displayName="NSM: Norm gen. nec. threshold" isReadOnly="false" name="normNecGenThreshold" type="double"/>
				
								
								<!-- NORM ACTIVATION/DEACTIVATION SETTINGS -->
								

	<!-- Minimum amount of evaluations required to decide if norms are effective and necessary -->
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="20" displayName="NSM: Norms min. evaluations classify" isReadOnly="false" name="normsMinEvaluationsToDecide" type="int"/>
				
	<!-- Threshold below which norms are considered not to be effective enough to be part of the normative system -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$DoubleConverter" defaultValue="0.05" displayName="NSM: Norm spec. eff. threshold" isReadOnly="false" name="normEffDeactThreshold" type="double"/>
	
	<!-- Threshold below which norms are considered not to be necessary enough to be part of the normative system -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$DoubleConverter" defaultValue="0.05" displayName="NSM: Norm spec. nec. threshold" isReadOnly="false" name="normNecDeactThreshold" type="double"/>
	
	<!-- Epsilon to compute the interval of values below which norms are considered not to be effective enough to be part of the normative system -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$DoubleConverter" defaultValue="0.025" displayName="NSM: Spec. threshold epsilon" isReadOnly="false" name="normEffDeactThresholdEpsilon" type="double"/>
	
	<!-- Epsilon to compute the interval of values below which norms are considered not to be necessary enough to be part of the normative system -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$DoubleConverter" defaultValue="0.025" displayName="NSM: Spec. threshold epsilon" isReadOnly="false" name="normNecDeactThresholdEpsilon" type="double"/>
	
	<!-- Minimum amount of evaluations required to decide if norm groups are effective -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$IntConverter" defaultValue="1" displayName="NSM: Norm groups min. evaluations classify" isReadOnly="false" name="normGroupsMinEvaluationsToDecide" type="int"/>
	
	<!-- Name of the custom norm synthesis strategy -->
	
	<parameter converter="repast.simphony.parameter.StringConverterFactory$StringStringConverter" defaultValue="user.strategies.CustomStrategy2" displayName="Custom strategy name" isReadOnly="false" name="customStrategyName" type="string"/>
	
</parameters>